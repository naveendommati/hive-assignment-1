1. Download vechile sales data -> https://github.com/shashank-mishra219/Hive-Class/blob/main/sales_order_data.csv

** hadoop command for creating directory in hdfs
 hadoop fs -mkdir /sales
**** moving files from hadoop local to hdfs directory
hadoop fs -put 'sales_order_data.csv' /sales
** now raw data available in hdfs location
**creating table in hive 
create table sales_order_csv(
    > ORDERNUMBER int,
    > QUANTITYORDERED int,
    > PRICEEACH float,
    > ORDERLINENUMBER int,
    > SALES float,
    > STATUS string,
    > QTR_ID int,
    > MONTH_ID int,
    > YEAR_ID int,
    > PRODUCTLINE string,
    > MSRP int,
    > PRODUCTCODE string,
    > PHONE string,
    > CITY string,
    > STATE string,
    > POSTALCODE string,
    > COUNTRY string,
    > TERRITORY string,
    > CONTACTLASTNAME string,
    > CONTACTFIRSTNAME string,
    > DEALSIZE string
    > )
    > row format delimited
    > fields terminated by ','
    > tblproperties("skip.header.line.count"="1")
    > ; 

**** table got created now 
*** now we loading data into table
load data inpath '/sales/sales_order_data.csv' into table sales_order_csv;'
*** creating orc table
create table sales_order_orc(
     ORDERNUMBER int,
    > QUANTITYORDERED int,
    > PRICEEACH float,
    > ORDERLINENUMBER int,
    > SALES float,
    > STATUS string,
    > QTR_ID int,
    > MONTH_ID int,
    > YEAR_ID int,
    > PRODUCTLINE string,
    > MSRP int,
    > PRODUCTCODE string,
    > PHONE string,
    > CITY string,
    > STATE string,
    > POSTALCODE string,
    > COUNTRY string,
    > TERRITORY string,
    > CONTACTLASTNAME string,
    > CONTACTFIRSTNAME string,
    > DEALSIZE string
    > )
    stored as orc;
    
    ** loading data into orc table
    insert overwrite table sales_order_orc select * from sales_order_csv;
    
    ***** Calculatye total sales per year
     select year_id, sum(sales) as total_sales from sales_order_orc group by year_id;
     
     output is 
    year_id    total_sales
    2003    3516979.547241211
    2004    4724162.593383789
    2005    1791486.7086791992
     
    *****Find a product for which maximum orders were placed
select productline , max(quantityordered) from sales_order_csv group by productline;

**out put is 
Classic Cars    97
Motorcycles     66
Planes  85
Ships   55
Trains  51
Trucks and Buses        70
Vintage Cars    76

****if required particular maxmimum of product 
select productline , max(quantityordered) from sales_order_csv group by productline;

***output is
Classic Cars    97

***** Calculate the total sales for each quarter
select sum(sales)as total_sales ,QTR_ID from sales_order_csv group by QTR_ID ;
***output**
total_sales     qtr_id
4701635.45300293        1
4096240.605834961       2
3517821.617919922       3
7749560.021850586       4

**** In which quarter sales was minimum
select sum(sales)as total_sales ,QTR_ID from sales_order_csv group by QTR_ID order by QTR_ID limit 1 ;\
***output**
total_sales     qtr_id
4701635.45300293        1

 

